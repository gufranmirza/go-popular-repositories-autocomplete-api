// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/gufranmirza/go-popular-repositories-autocomplete-api/web/middlewares (interfaces: Middlewares)

// Package middlewaresmock is a generated GoMock package.
package middlewaresmock

import (
	gomock "github.com/golang/mock/gomock"
	http "net/http"
	reflect "reflect"
)

// MockMiddlewares is a mock of Middlewares interface
type MockMiddlewares struct {
	ctrl     *gomock.Controller
	recorder *MockMiddlewaresMockRecorder
}

// MockMiddlewaresMockRecorder is the mock recorder for MockMiddlewares
type MockMiddlewaresMockRecorder struct {
	mock *MockMiddlewares
}

// NewMockMiddlewares creates a new mock instance
func NewMockMiddlewares(ctrl *gomock.Controller) *MockMiddlewares {
	mock := &MockMiddlewares{ctrl: ctrl}
	mock.recorder = &MockMiddlewaresMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockMiddlewares) EXPECT() *MockMiddlewaresMockRecorder {
	return m.recorder
}

// Logger mocks base method
func (m *MockMiddlewares) Logger() func(http.Handler) http.Handler {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Logger")
	ret0, _ := ret[0].(func(http.Handler) http.Handler)
	return ret0
}

// Logger indicates an expected call of Logger
func (mr *MockMiddlewaresMockRecorder) Logger() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Logger", reflect.TypeOf((*MockMiddlewares)(nil).Logger))
}

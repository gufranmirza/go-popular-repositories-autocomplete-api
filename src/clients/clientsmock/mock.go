// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/gufranmirza/go-popular-repositories-autocomplete-api/clients (interfaces: Clients)

// Package clientsmock is a generated GoMock package.
package clientsmock

import (
	gomock "github.com/golang/mock/gomock"
	dbmodels "github.com/gufranmirza/go-popular-repositories-autocomplete-api/database/dbmodels"
	reflect "reflect"
)

// MockClients is a mock of Clients interface
type MockClients struct {
	ctrl     *gomock.Controller
	recorder *MockClientsMockRecorder
}

// MockClientsMockRecorder is the mock recorder for MockClients
type MockClientsMockRecorder struct {
	mock *MockClients
}

// NewMockClients creates a new mock instance
func NewMockClients(ctrl *gomock.Controller) *MockClients {
	mock := &MockClients{ctrl: ctrl}
	mock.recorder = &MockClientsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockClients) EXPECT() *MockClientsMockRecorder {
	return m.recorder
}

// GetRepositories mocks base method
func (m *MockClients) GetRepositories() ([]dbmodels.Repository, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRepositories")
	ret0, _ := ret[0].([]dbmodels.Repository)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRepositories indicates an expected call of GetRepositories
func (mr *MockClientsMockRecorder) GetRepositories() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRepositories", reflect.TypeOf((*MockClients)(nil).GetRepositories))
}
